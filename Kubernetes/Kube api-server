Kube-apiserver is responsible for authenticating, validating requests, retrieving and Updating data in ETCD key-value store. 
In fact kube-apiserver is the only component that interacts directly to the etcd datastore.
The other components such as kube-scheduler, kube-controller-manager and kubelet uses the API-Server to update in the cluster in their respective areas.

The Kube API Server is a primary component of the Kubernetes control plane, responsible for managing and exposing the Application Programming Interface (API) for cluster resources.
It exposed the Kubernetes API to users and accepts CRUD (Create, Read, Update, Delete) operations from clients. 
The API Server authenticates and authorizes users, validates and processes requests, and updates the etcd database.
It's the entry point for most users and systems interacting with the cluster, allowing them to manage and manipulate cluster resources such as pods, services, and deployments

Handling API Requests: The API Server processes requests from clients (like kubectl, controllers, or other components) and performs the corresponding actions on the cluster. 
These requests could be about creating, updating, deleting, or retrieving resources like Pods, Services, Deployments, etc.

Cluster State Management: The API Server maintains the state of all cluster resources by interacting with etcd, the distributed key-value store. 
When changes occur (e.g., a new pod is created), the API Server updates the state in etcd, ensuring consistency and availability of cluster data.

The API Server can authenticate users and services using tokens, certificates, or other mechanisms.
After authentication, the API Server enforces RBAC (Role-Based Access Control) to ensure that only users or services with the correct permissions can access specific resources.
API Server acting as the interface for managing cluster data stored in etcd.

