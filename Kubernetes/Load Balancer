A LoadBalancer service in Kubernetes is used to expose a service to external traffic by provisioning a load balancer provided by the underlying cloud infrastructure (like AWS, Google Cloud, Azure, etc.).
This type of service automatically distributes incoming traffic across multiple pods and ensures high availability and fault tolerance for your application.

How LoadBalancer Works
When you create a LoadBalancer service, Kubernetes requests a cloud provider to provision an external load balancer. 
The load balancer receives incoming traffic and forwards it to the backend pods associated with the service.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-api-deployment
  labels:
    app: my-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-api
  template:
    metadata:
      labels:
        app: my-api
    spec:
      containers:
      - name: my-api-container
        image: my-api-image:latest
        ports:
        - containerPort: 8080



apiVersion: v1
kind: Service
metadata:
  name: my-api-loadbalancer-service
spec:
  selector:
    app: my-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: LoadBalancer
